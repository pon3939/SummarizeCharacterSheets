{
    "QueryLanguage": "JSONata",
    "Comment": "スプレッドシートを更新",
    "StartAt": "initialize_parallel",
    "States": {
        "initialize_parallel": {
            "Type": "Parallel",
            "Branches": [
                {
                    "StartAt": "environments_query",
                    "States": {
                        "environments_query": {
                            "Type": "Task",
                            "Arguments": {
                                "TableName": "${EnvironmentsTable}",
                                "ProjectionExpression": "season_id, spreadsheet_id",
                                "KeyConditionExpression": "id = :environment_id",
                                "ExpressionAttributeValues": {
                                    ":environment_id": {
                                        "N": "{% $string($states.input.environment_id) %}"
                                    }
                                }
                            },
                            "Resource": "arn:aws:states:::aws-sdk:dynamodb:query",
                            "Next": "level_caps_query",
                            "Assign": {
                                "environment": "{% $states.result.Items[0] %}"
                            }
                        },
                        "level_caps_query": {
                            "Type": "Task",
                            "Arguments": {
                                "TableName": "${LevelCapsTable}",
                                "ProjectionExpression": "max_exp, minimum_exp",
                                "KeyConditionExpression": "season_id = :season_id AND start_datetime <= :current_datetime",
                                "ExpressionAttributeValues": {
                                    ":season_id": {
                                        "N": "{% $environment.season_id.N %}"
                                    },
                                    ":current_datetime": {
                                        "S": "{% $states.context.State.EnteredTime %}"
                                    }
                                },
                                "ScanIndexForward": false,
                                "Limit": 1
                            },
                            "Resource": "arn:aws:states:::aws-sdk:dynamodb:query",
                            "End": true,
                            "Output": {
                                "environment": "{% $environment %}",
                                "level_cap": "{% $states.result.Items[0] %}"
                            }
                        }
                    }
                },
                {
                    "StartAt": "google_service_accounts_scan",
                    "States": {
                        "google_service_accounts_scan": {
                            "Type": "Task",
                            "Arguments": {
                                "TableName": "${GoogleServiceAccountsTable}",
                                "ProjectionExpression": "auth_provider_x509_cert_url, auth_uri, client_email, client_id, client_x509_cert_url, private_key, private_key_id, project_id, token_uri, #type, universe_domain",
                                "ExpressionAttributeNames": {
                                    "#type": "type"
                                }
                            },
                            "Resource": "arn:aws:states:::aws-sdk:dynamodb:scan",
                            "End": true,
                            "Output": {
                                "output": "{% $states.result.Items[0] %}"
                            }
                        }
                    }
                }
            ],
            "Assign": {
                "environment": "{% $states.result[0].environment %}",
                "level_cap": "{% $states.result[0].level_cap %}",
                "google_service_account": "{% $states.result[1].output %}"
            },
            "Next": "initialize_players_query_pass"
        },
        "initialize_players_query_pass": {
            "Type": "Pass",
            "Next": "players_query",
            "Output": {
                "last_evaluated_key": "{% null %}"
            }
        },
        "players_query": {
            "Type": "Task",
            "Arguments": {
                "TableName": "${PlayersTable}",
                "ProjectionExpression": "#name, update_time, ytsheet_ids",
                "KeyConditionExpression": "season_id = :season_id",
                "ExpressionAttributeNames": {
                    "#name": "name"
                },
                "ExpressionAttributeValues": {
                    ":season_id": {
                        "N": "{% $environment.season_id.N %}"
                    }
                },
                "ExclusiveStartKey": "{% $states.input.last_evaluated_key %}"
            },
            "Resource": "arn:aws:states:::aws-sdk:dynamodb:query",
            "Assign": {
                "players": "{% $states.result.Items %}"
            },
            "Next": "players_query_choice"
        },
        "players_query_choice": {
            "Type": "Choice",
            "Choices": [
                {
                    "Next": "players_query",
                    "Condition": "{% $exists($states.input.LastEvaluatedKey) %}",
                    "Output": {
                        "last_evaluated_key": "$states.input.LastEvaluatedKey"
                    }
                }
            ],
            "Default": "update_sheets_parallel"
        },
        "update_sheets_parallel": {
            "Type": "Parallel",
            "Branches": [
                {
                    "StartAt": "reorder_worksheets",
                    "States": {
                        "reorder_worksheets": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::lambda:invoke",
                            "Output": "{% $states.result.Payload %}",
                            "Arguments": {
                                "FunctionName": "${ReorderWorksheetsFunctionArn}",
                                "Payload": {
                                    "Environment": "{% $environment %}",
                                    "GoogleServiceAccount": "{% $google_service_account %}"
                                }
                            },
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "Lambda.ServiceException",
                                        "Lambda.AWSLambdaException",
                                        "Lambda.SdkClientException",
                                        "Lambda.TooManyRequestsException"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 3,
                                    "BackoffRate": 2,
                                    "JitterStrategy": "FULL"
                                }
                            ],
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "update_player_sheet_invoke",
                    "States": {
                        "update_player_sheet_invoke": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::lambda:invoke",
                            "Output": "{% $states.result.Payload %}",
                            "Arguments": {
                                "FunctionName": "${UpdatePlayerSheetFunctionArn}",
                                "Payload": {
                                    "BucketName": "${MyBucketName}",
                                    "Environment": "{% $environment %}",
                                    "GoogleServiceAccount": "{% $google_service_account %}",
                                    "LevelCap": "{% $level_cap %}",
                                    "Players": "{% $players %}"
                                }
                            },
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "Lambda.ServiceException",
                                        "Lambda.AWSLambdaException",
                                        "Lambda.SdkClientException",
                                        "Lambda.TooManyRequestsException"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 3,
                                    "BackoffRate": 2,
                                    "JitterStrategy": "FULL"
                                }
                            ],
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "update_basic_sheet_invoke",
                    "States": {
                        "update_basic_sheet_invoke": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::lambda:invoke",
                            "Output": "{% $states.result.Payload %}",
                            "Arguments": {
                                "FunctionName": "${UpdateBasicSheetFunctionArn}",
                                "Payload": {
                                    "BucketName": "${MyBucketName}",
                                    "Environment": "{% $environment %}",
                                    "GoogleServiceAccount": "{% $google_service_account %}",
                                    "LevelCap": "{% $level_cap %}",
                                    "Players": "{% $players %}"
                                }
                            },
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "Lambda.ServiceException",
                                        "Lambda.AWSLambdaException",
                                        "Lambda.SdkClientException",
                                        "Lambda.TooManyRequestsException"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 3,
                                    "BackoffRate": 2,
                                    "JitterStrategy": "FULL"
                                }
                            ],
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "update_ability_sheet_invoke",
                    "States": {
                        "update_ability_sheet_invoke": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::lambda:invoke",
                            "Output": "{% $states.result.Payload %}",
                            "Arguments": {
                                "FunctionName": "${UpdateAbilitySheetFunctionArn}",
                                "Payload": {
                                    "BucketName": "${MyBucketName}",
                                    "Environment": "{% $environment %}",
                                    "GoogleServiceAccount": "{% $google_service_account %}",
                                    "LevelCap": "{% $level_cap %}",
                                    "Players": "{% $players %}"
                                }
                            },
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "Lambda.ServiceException",
                                        "Lambda.AWSLambdaException",
                                        "Lambda.SdkClientException",
                                        "Lambda.TooManyRequestsException"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 3,
                                    "BackoffRate": 2,
                                    "JitterStrategy": "FULL"
                                }
                            ],
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "update_status_sheet_invoke",
                    "States": {
                        "update_status_sheet_invoke": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::lambda:invoke",
                            "Output": "{% $states.result.Payload %}",
                            "Arguments": {
                                "FunctionName": "${UpdateStatusSheetFunctionArn}",
                                "Payload": {
                                    "BucketName": "${MyBucketName}",
                                    "Environment": "{% $environment %}",
                                    "GoogleServiceAccount": "{% $google_service_account %}",
                                    "LevelCap": "{% $level_cap %}",
                                    "Players": "{% $players %}"
                                }
                            },
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "Lambda.ServiceException",
                                        "Lambda.AWSLambdaException",
                                        "Lambda.SdkClientException",
                                        "Lambda.TooManyRequestsException"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 3,
                                    "BackoffRate": 2,
                                    "JitterStrategy": "FULL"
                                }
                            ],
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "update_combat_skill_sheet_invoke",
                    "States": {
                        "update_combat_skill_sheet_invoke": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::lambda:invoke",
                            "Output": "{% $states.result.Payload %}",
                            "Arguments": {
                                "FunctionName": "${UpdateCombatSkillSheetFunctionArn}",
                                "Payload": {
                                    "BucketName": "${MyBucketName}",
                                    "Environment": "{% $environment %}",
                                    "GoogleServiceAccount": "{% $google_service_account %}",
                                    "LevelCap": "{% $level_cap %}",
                                    "Players": "{% $players %}"
                                }
                            },
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "Lambda.ServiceException",
                                        "Lambda.AWSLambdaException",
                                        "Lambda.SdkClientException",
                                        "Lambda.TooManyRequestsException"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 3,
                                    "BackoffRate": 2,
                                    "JitterStrategy": "FULL"
                                }
                            ],
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "update_honor_sheet_invoke",
                    "States": {
                        "update_honor_sheet_invoke": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::lambda:invoke",
                            "Output": "{% $states.result.Payload %}",
                            "Arguments": {
                                "FunctionName": "${UpdateHonorSheetFunctionArn}",
                                "Payload": {
                                    "BucketName": "${MyBucketName}",
                                    "Environment": "{% $environment %}",
                                    "GoogleServiceAccount": "{% $google_service_account %}",
                                    "LevelCap": "{% $level_cap %}",
                                    "Players": "{% $players %}"
                                }
                            },
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "Lambda.ServiceException",
                                        "Lambda.AWSLambdaException",
                                        "Lambda.SdkClientException",
                                        "Lambda.TooManyRequestsException"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 3,
                                    "BackoffRate": 2,
                                    "JitterStrategy": "FULL"
                                }
                            ],
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "update_abyss_curse_sheet_invoke",
                    "States": {
                        "update_abyss_curse_sheet_invoke": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::lambda:invoke",
                            "Output": "{% $states.result.Payload %}",
                            "Arguments": {
                                "FunctionName": "${UpdateAbyssCurseSheetFunctionArn}",
                                "Payload": {
                                    "BucketName": "${MyBucketName}",
                                    "Environment": "{% $environment %}",
                                    "GoogleServiceAccount": "{% $google_service_account %}",
                                    "LevelCap": "{% $level_cap %}",
                                    "Players": "{% $players %}"
                                }
                            },
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "Lambda.ServiceException",
                                        "Lambda.AWSLambdaException",
                                        "Lambda.SdkClientException",
                                        "Lambda.TooManyRequestsException"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 3,
                                    "BackoffRate": 2,
                                    "JitterStrategy": "FULL"
                                }
                            ],
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "update_general_skill_sheet_invoke",
                    "States": {
                        "update_general_skill_sheet_invoke": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::lambda:invoke",
                            "Output": "{% $states.result.Payload %}",
                            "Arguments": {
                                "FunctionName": "${UpdateGeneralSkillSheetFunctionArn}",
                                "Payload": {
                                    "BucketName": "${MyBucketName}",
                                    "Environment": "{% $environment %}",
                                    "GoogleServiceAccount": "{% $google_service_account %}",
                                    "LevelCap": "{% $level_cap %}",
                                    "Players": "{% $players %}"
                                }
                            },
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "Lambda.ServiceException",
                                        "Lambda.AWSLambdaException",
                                        "Lambda.SdkClientException",
                                        "Lambda.TooManyRequestsException"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 3,
                                    "BackoffRate": 2,
                                    "JitterStrategy": "FULL"
                                }
                            ],
                            "End": true
                        }
                    }
                }
            ],
            "End": true
        }
    }
}
